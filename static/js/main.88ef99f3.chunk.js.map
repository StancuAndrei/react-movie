{"version":3,"sources":["service/index.js","components/home/Home.jsx","components/moviedetail/MovieDetail.jsx","App.jsx","serviceWorker.js","index.js"],"names":["apiKey","url","nowPlayingUrl","topratedUrl","movieUrl","genreUrl","moviesUrl","personUrl","latestUrl","upcomingUrl","popularUrl","searchUrl","fetchSearch","a","axios","get","params","api_key","language","query","page","data","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchMovies","fetchGenre","g","name","fetchMovieByGenre","genre_id","with_genres","fetchPersons","p","profileImg","known","fetchTopratedMovie","fetchMovieDetail","fetchMovieVideos","fetchCasts","c","character","img","fetchSimilarMovie","fetchLatestMovies","fetchUpcomingMovies","fetchPopularMovies","Home","useState","nowPlaying","setNowPlaying","setLatestM","popularM","setPopularM","upcomingM","setUpcomingM","topRated","setTopRated","persons","setPersons","genres","setGenres","movieGenre","setMovieGenre","setSearch","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","initialSlide","useEffect","fetchApi","handleGenreClick","movies","slice","item","index","style","height","width","key","className","src","alt","textAlign","fontSize","genreList","type","onClick","genreMovieList","to","fontWeight","count","size","color1","popularMovies","upcomingMovies","witdh","topRatedList","trendingPersons","i","color","autoplay","pauseOnVisibility","slideShowSpeed","version","indicators","border","backgroundImage","MovieDetail","match","detail","setDetail","isOpen","setIsOpen","video","setVideo","casts","setCasts","similarMovie","setSimilarMovie","fetchAPI","genresList","MoviePlayerModel","props","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","backgroundColor","playing","castList","similarMovieList","show","onHide","backdrop_path","cursor","vote_average","release_date","runtime","budget","homepage","borderTop","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.88ef99f3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\n\r\n\r\n//07bbf40ac6cdf3c0f44f198b373e4d4f\r\nconst apiKey = '07bbf40ac6cdf3c0f44f198b373e4d4f';\r\nconst url='https://api.themoviedb.org/3';\r\nconst nowPlayingUrl=`${url}/movie/now_playing`;\r\nconst topratedUrl=`${url}/movie/top_rated`;\r\nconst movieUrl =`${url}/movie`;\r\nconst genreUrl=`${url}/genre/movie/list`;\r\nconst moviesUrl =`${url}/discover/movie`;\r\nconst personUrl=`${url}/trending/person/week`;\r\nconst latestUrl = `${url}/movie/latest`;\r\nconst upcomingUrl = `${url}/movie/upcoming`;\r\nconst popularUrl = `${url}/movie/popular`;\r\nconst searchUrl = `${url}/search/movie`;\r\n\r\n\r\nexport const fetchSearch = async () => {\r\n    try{\r\n        const {data} = await axios.get(searchUrl,{\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                query: '&query=',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchMovies = async () => {\r\n    try{\r\n        const{data} = await axios.get(nowPlayingUrl,{\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchGenre = async () =>{\r\n    try{\r\n        const {data} = await axios.get(genreUrl, {\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const modifiedData = data['genres'].map((g) => ({\r\n            id: g['id'],\r\n            name: g['name']\r\n        }))\r\n        return modifiedData;\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchMovieByGenre = async (genre_id) => {\r\n    try{\r\n        const{data} = await axios.get(moviesUrl,{\r\n            params:{\r\n                api_key: apiKey,\r\n                    language: 'en_US',\r\n                    page: 1,\r\n                    with_genres: genre_id\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n            const modifiedData = data['results'].map((m) => ({\r\n                id: m['id'],\r\n                backPoster: posterUrl + m['backdrop_path'],\r\n                popularity: m['popularith'],\r\n                title: m['title'],\r\n                poster: posterUrl + m['poster_path'],\r\n                overview: m['overview'],\r\n                rating: m['vote_average'],\r\n            }))\r\n\r\n            return modifiedData;\r\n    }catch(error){}\r\n    }\r\n\r\n\r\n\r\nexport const fetchPersons = async () => {\r\n    try{\r\n        const {data} = await axios.get(personUrl,{\r\n            params:{\r\n                api_key: apiKey,\r\n            }\r\n        })\r\n        const modifiedData = data['results'].map((p) => ({\r\n            id:p['id'],\r\n            popularity: p['popularity'],\r\n            name: p['name'],\r\n            profileImg: 'https://image.tmdb.org/t/p/w200' + p['profile_path'],\r\n            known: p['known_for_department']\r\n        }))\r\n        return modifiedData;\r\n    }catch(error){}\r\n\r\n}\r\n\r\n\r\nexport const fetchTopratedMovie = async () => {\r\n    try{\r\n        const {data} = await axios.get(topratedUrl,{\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch(error){}\r\n}\r\n\r\n\r\nexport const fetchMovieDetail = async (id) => {\r\n    try{\r\n        const {data} = await axios.get(`${movieUrl}/${id}`, {\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n            }\r\n        });\r\n        return data;\r\n    }catch(error){}\r\n\r\n}\r\n\r\n\r\n\r\nexport const fetchMovieVideos = async (id) => {\r\n    try{\r\n        const{data} = await axios.get(`${movieUrl}/${id}/videos`,{\r\n            params:{\r\n                api_key: apiKey\r\n            }\r\n        });\r\n        return data['results'][0];\r\n    }catch(error){}\r\n    }\r\n\r\n    export const fetchCasts = async (id) => {\r\n        try{\r\n            const{data} = await axios.get(`${movieUrl}/${id}/credits`,{\r\n                params:{\r\n                    api_key: apiKey\r\n                }\r\n            });\r\n            const modifiedData = data['cast'].map((c) => ({\r\n                id: c['cast_id'],\r\n                character: c['character'],\r\n                name: c['name'],\r\n                img: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\r\n            }));\r\n            return modifiedData;\r\n        }catch(error){}\r\n\r\n    }\r\n\r\n\r\nexport const fetchSimilarMovie = async (id) => {\r\n    try{\r\n        const{data} = await axios.get(`${movieUrl}/${id}/similar`,{\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n            }\r\n        });\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    }catch(error){}\r\n\r\n}\r\n\r\n\r\nexport const fetchLatestMovies = async () => {\r\n    try{\r\n        const{ data } = await axios.get(latestUrl, {\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US'\r\n\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n        const modifiedData = data.map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchUpcomingMovies = async () => {\r\n    try{\r\n        const { data } = await axios.get(upcomingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    }catch(error){}\r\n}\r\n\r\nexport const fetchPopularMovies = async () =>{\r\n    try{\r\n        const {data} = await axios.get(popularUrl, {\r\n            params:{\r\n                api_key: apiKey,\r\n                language: 'en_US',\r\n                page: 1\r\n            }\r\n        })\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    }catch(error){\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {fetchMovies, fetchGenre, fetchMovieByGenre, fetchPersons, fetchTopratedMovie, fetchLatestMovies, fetchPopularMovies, fetchUpcomingMovies, fetchSearch} from '../../service/index';\r\nimport RBCarousel from 'react-bootstrap-carousel';\r\nimport 'react-bootstrap-carousel/dist/react-bootstrap-carousel.css';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactStars from 'react-rating-stars-component';\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from 'react-slick';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Home() {\r\n    //folosim use state pt urm variabile unde vom lua datele din api\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n    const [latestM, setLatestM] = useState([]);\r\n    const [popularM, setPopularM] = useState([]);\r\n    const [upcomingM, setUpcomingM] = useState([]);\r\n    const [topRated, setTopRated] = useState([]);\r\n    const [persons, setPersons] = useState([]);\r\n    const [genres, setGenres] = useState([]);\r\n    const [movieGenre, setMovieGenre] = useState([]);\r\n    const [search, setSearch] = useState([]);\r\n\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 2,\r\n        responsive: [\r\n            {\r\n              breakpoint: 1024,\r\n              settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 3,\r\n                infinite: true,\r\n                dots: true\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n                initialSlide: 2\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]\r\n      };\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setNowPlaying(await fetchMovies());\r\n            setLatestM(await fetchLatestMovies());\r\n            setPopularM(await fetchPopularMovies());\r\n            setUpcomingM(await fetchUpcomingMovies());\r\n            setTopRated( await fetchTopratedMovie());\r\n            setPersons(await fetchPersons());\r\n            setGenres(await fetchGenre());\r\n            setMovieGenre(await fetchMovieByGenre(28));\r\n            setSearch(await fetchSearch());\r\n        };\r\n\r\n        fetchApi();\r\n    }, []);\r\n\r\n\r\n    const handleGenreClick = async (genre_id) =>{\r\n        setMovieGenre( await fetchMovieByGenre(genre_id));\r\n    }\r\n\r\n\r\n    const movies = nowPlaying.slice(5,10).map((item,index) => {\r\n        return(\r\n            <div style={{height: 500, width: \"100%\"}} key={index} >\r\n                <div className=\"carousel-center\">\r\n                    <img style={{height:600}} src={item.backPoster} alt={item.title} />\r\n                </div>\r\n\r\n                <div style={{textAlign:'center',fontSize: 35}} className=\"carousel-caption\">\r\n                    {item.title}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const nowPlayingMovies = nowPlaying.slice(0,4).map((item,index) => {\r\n        return(\r\n            <div style={{height: 500, width: \"100%\"}} key={index} >\r\n                <div className=\"carousel-center\">\r\n                    <img style={{height:600}} src={item.backPoster} alt={item.title} />\r\n                </div>\r\n\r\n                <div style={{textAlign:'center',fontSize: 35}} className=\"carousel-caption\">\r\n                    {item.title}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const genreList = genres.map((item,index) => {\r\n        return(\r\n            <li className=\"list-inline-item\" key={index}>\r\n                <button type=\"button\" className=\"btn btn-outline-info\" onClick={() => {\r\n                    handleGenreClick(item.id)\r\n                }}>\r\n                    {item.name}\r\n                </button>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const genreMovieList = movieGenre.slice(0,20).map((item, index) => {\r\n        return(\r\n            // <div className=\"col-md-3 col-sm-6\" key={index}>\r\n                <div key={index}>\r\n                {/* <div className=\"card\"> */}\r\n                    <div>\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img style={{height:300}} className=\"img-fluid\" src={item.poster} alt={item.title}></img>\r\n\r\n                    </Link>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n        <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n        <p>Rated: {item.rating}</p>\r\n        <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const popularMovies = popularM.slice(0,4).map((item,index) => {\r\n        return(\r\n            <div className=\"col-md-3\" key={index}>\r\n                <div className=\"card\">\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img className=\"img-fluid\" src={item.poster} alt={item.title} />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n        <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n        <p>Rated: {item.rating}</p>\r\n        <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    // const upcomingMovies = upcomingM.slice(0,4).map((item,index) => {\r\n    //     return(\r\n    //         <div className=\"col-md-3\" key={index}>\r\n    //             <div className=\"card\">\r\n    //                 <Link to={`/movie/${item.id}`}>\r\n    //                     <img className=\"img-fluid\" src={item.poster} alt={item.title} />\r\n    //                 </Link>\r\n    //             </div>\r\n\r\n    //             <div className=\"mt-3\">\r\n    //     <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n    //     <p>Rated: {item.rating}</p>\r\n    //     <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n    //             </div>\r\n    //         </div>\r\n    //     )\r\n    // })\r\n\r\n     const upcomingMovies = upcomingM.slice(0,10).map((item,index) => {\r\n         return(\r\n            <div  key={index}>\r\n                         <div>\r\n                             <Link to={`/movie/${item.id}`}>\r\n                                 <img style={{height: 300, witdh: 100+'%'}} className=\"img-fluid\" src={item.poster} alt={item.title} />\r\n                             </Link>\r\n                         </div>\r\n\r\n                         <div className=\"mt-3\">\r\n                 <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n                 <p>Rated: {item.rating}</p>\r\n                 <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                         </div>\r\n                     </div>\r\n\r\n\r\n         )\r\n     })\r\n\r\n     const topRatedList = topRated.slice(0,10).map((item,index) => {\r\n        return (\r\n            // <div className=\"col-md-3\" key={index}>\r\n                <div key={index}>\r\n                {/* <div className=\"card\"> */}\r\n                    <div>\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img style={{height: 300}} className=\"img-fluid\" src={item.poster} alt={item.title} />\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n        <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n        <p>Rated: {item.rating}</p>\r\n        <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    const trendingPersons = persons.slice(0,4).map((p,i) => {\r\n        return(\r\n            <div className=\"col-md-3 text-center\" key={i}>\r\n                <img className=\"img-fluid rounded-circle mx-auto d-block\" src={p.profileImg} alt={p.name} />\r\n        <p className=\"font-weight-bold text-center\">{p.name}</p>\r\n        <p className=\"font-weight-light text-center\" style={{color:\"5a606b\"}}>\r\n            Trending for {p.known}\r\n        </p>\r\n\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        //returning the carousel on the web page\r\n        //genre button\r\n        //list of filme\r\n\r\n    <div>\r\n        {/* <NavBar /> */}\r\n\r\n\r\n        <div className='container'>\r\n            <div className=\"row mt-2\" >\r\n                <div className=\"col\">\r\n                    <RBCarousel\r\n                    autoplay={true}\r\n                    pauseOnVisibility={true}\r\n                    slideShowSpeed={5000}\r\n                    version={4}\r\n                    indicators={false}\r\n                    >\r\n                        {movies}\r\n                    </RBCarousel>\r\n                </div>\r\n            </div>\r\n        <hr style={{color: '#a8afba',border: 0, height: 1+'px',backgroundImage: 'linear-gradient(to right, rgba(0,0,0,0),rgba(0,0,0,0.75),rgba(0,0,0,0))'}} />\r\n\r\n\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n\r\n                <p className=\"font-weight-bold\" style={{color:'#5a606b'}}>\r\n                    POPULAR MOVIES\r\n                </p>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                {popularMovies}\r\n            </div>\r\n            <hr style={{color: '#a8afba',border: 0, height: 1+'px',backgroundImage: 'linear-gradient(to right, rgba(0,0,0,0),rgba(0,0,0,0.75),rgba(0,0,0,0))'}} />\r\n\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n                <p className=\"font-weight-bold\" style={{color:'#5a606b'}}>\r\n                    TRENDING PERSONS ON THIS WEEK\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row mt-3\">{trendingPersons}</div>\r\n\r\n\r\n\r\n\r\n\r\n        <hr style={{color: '#a8afba',border: 0, height: 1+'px',backgroundImage: 'linear-gradient(to right, rgba(0,0,0,0),rgba(0,0,0,0.75),rgba(0,0,0,0))'}} />\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n\r\n                <p className=\"font-weight-bold\" style={{color:'#5a606b'}}>\r\n                    UPCOMING MOVIES\r\n                </p>\r\n            </div>\r\n            </div>\r\n\r\n            {/* <div className=\"row mt-3\"> */}\r\n                <div >\r\n\r\n            <Slider {...settings}>\r\n                        {upcomingMovies}\r\n                        </Slider>\r\n\r\n            </div>\r\n\r\n            <hr style={{color: '#a8afba',border: 0, height: 1+'px',backgroundImage: 'linear-gradient(to right, rgba(0,0,0,0),rgba(0,0,0,0.75),rgba(0,0,0,0))'}} />\r\n\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n\r\n                <p className=\"font-weight-bold\" style={{color:'#5a606b'}}>\r\n                    TOP RATED MOVIES\r\n                </p>\r\n            </div>\r\n            </div>\r\n\r\n            {/* <div className=\"row mt-3\"> */}\r\n                <div >\r\n\r\n            <Slider {...settings}>\r\n                        {topRatedList}\r\n                        </Slider>\r\n            </div>\r\n            <hr style={{color: '#a8afba',border: 0, height: 1+'px',backgroundImage: 'linear-gradient(to right, rgba(0,0,0,0),rgba(0,0,0,0.75),rgba(0,0,0,0))'}} />\r\n            <p></p>\r\n\r\n\r\n            <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n\r\n                <p className=\"font-weight-bold\" style={{color:'#5a606b'}}>\r\n                    BROWSE MOVIES BY GENRE\r\n                </p>\r\n            </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"cel\">\r\n                    <ul className=\"list-inline\">\r\n                        {genreList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n            <Slider {...settings}>\r\n            {genreMovieList}\r\n            </Slider>\r\n        </div>\r\n\r\n\r\n            </div>\r\n    </div>\r\n\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { fetchMovieDetail, fetchMovieVideos, fetchCasts, fetchSimilarMovie } from '../../service/index';\r\nimport 'react-bootstrap-carousel/dist/react-bootstrap-carousel.css'\r\nimport {Modal } from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport function MovieDetail({match}){\r\n    let params = match.params;\r\n    let genres = [];\r\n\r\n    const [detail,setDetail] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [video,setVideo] = useState([]);\r\n    const [casts, setCasts] = useState([]);\r\n    const [similarMovie, setSimilarMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDetail(await fetchMovieDetail(params.id));\r\n            setVideo(await fetchMovieVideos(params.id));\r\n            setCasts(await fetchCasts(params.id));\r\n            setSimilarMovie( await fetchSimilarMovie(params.id));\r\n        };\r\n\r\n        fetchAPI();\r\n    }, [params.id]);\r\n\r\n    genres = detail.genres;\r\n\r\n    //componenta pt video player\r\n    const MoviePlayerModel = (props) => {\r\n        const youtubeUrl = 'https://www.youtube.com/watch?v=';\r\n        return(\r\n            <Modal\r\n            {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                    id=\"contained-modal-title-vcenter\"\r\n                    style={{color: '#000', fontWeight: 'bolder'}} >\r\n                        {detail.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body style={{backgroundColor: '#000'}} >\r\n                    <ReactPlayer className=\"container-fluid\"\r\n                    url={youtubeUrl + video.key}\r\n                    playing\r\n                    width='100%'\r\n                    >\r\n\r\n                    </ReactPlayer>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    let genresList;\r\n    if(genres){\r\n        genresList=genres.map((g,i) => {\r\n            return(\r\n                <li className=\"list-inline-item\" key={i} >\r\n            <button type=\"button\" className=\"btn btn-outline-info\">\r\n                {g.name}\r\n            </button>\r\n            </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    /*const genresList = genres.map((g,i) => {\r\n        return (\r\n            <li className=\"list-inline-item\" key={i} >\r\n            <button type=\"button\" className=\"btn btn-outline-info\">\r\n                {g.name}\r\n            </button>\r\n            </li>\r\n        );\r\n    })*/\r\n\r\n\r\n    const castList = casts.slice(0,4).map((c,i) => {\r\n        return (\r\n            <div className=\"col-md-3 text-center\" key={i}>\r\n                <img className=\"img-fluid rounded-circle mx-auto d-block\" src={c.img} alt={c.name} />\r\n        <p className=\"font-weight-bold text-center\">{c.name}</p>\r\n        <p className=\"font-weight-light text-center\" style={{color:\"5a606b\"}}>\r\n            {c.character}\r\n        </p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    const similarMovieList = similarMovie.slice(0,4).map((item,index) => {\r\n        return (\r\n            <div className=\"col-md-3 col-sm-6\" key={index}>\r\n                <div className=\"card\">\r\n                    <Link to={`/movie/${item.id}`}>\r\n                        <img className=\"img-fluid\" src={item.poster} alt={item.title}></img>\r\n\r\n                    </Link>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n        <p style={{fontWeight: 'bolder'}}>{item.title}</p>\r\n        <p>Rated: {item.rating}</p>\r\n        <ReactStars count={item.rating} size={20} color1={'#f4c10f'}></ReactStars>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-2\">\r\n                <MoviePlayerModel show={isOpen} onHide={() => {\r\n                    setIsOpen(false);\r\n                }}\r\n                >\r\n\r\n                </MoviePlayerModel>\r\n                <div className=\"col text-center\" style={{width: '100%'}}>\r\n                    <img className=\"img-fluid\" src={`http://image.tmdb.org/t/p/original/${detail.backdrop_path}`} alt={detail.title}></img>\r\n                    <div className=\"carousel-center\">\r\n                    <i onClick={() => setIsOpen(true)} className=\"far fa-play-circle\" style={{fontSize: 95, color: '#f4c10f',cursor:'pointer'}}></i>\r\n                </div>\r\n                <div className=\"carousel-caption\" style={{textAlign: 'center',fontSize: 25}}>\r\n                    {detail.title}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{color: '#5a606b', fontWeight: \"bolder\"}}>GENRE</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row-mt-3\">\r\n                <div className=\"col\">\r\n                    <ul className=\"list-inline\">\r\n                        {genresList}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <div className=\"text-center\">\r\n                        <ReactStars count={detail.vote_average}\r\n                        size={20}\r\n                        color1={'#f4c10f'}\r\n                        >\r\n\r\n                        </ReactStars>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n            <p style={{color: '#5a606b', fontWeight: 'bolder'}} >\r\n                OVERVIEW</p>\r\n                {detail.overview}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-3\">\r\n                    <p style={{color: '#5a606b', fontWeight:'bolder'}}>RELEASE DATE</p>\r\n            <p style={{color: '#f4c10f'}} > {detail.release_date}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                    <p style={{color: '#5a606b', fontWeight:'bolder'}}>RUN TIME</p>\r\n            <p style={{color: '#f4c10f'}} > {detail.runtime}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                    <p style={{color: '#5a606b', fontWeight:'bolder'}}>BUDGET</p>\r\n            <p style={{color: '#f4c10f'}} > {detail.budget}</p>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                    <p style={{color: '#5a606b', fontWeight:'bolder'}}>HOMEPAGE</p>\r\n            <p style={{color: '#f4c10f'}} > {detail.homepage}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{color: '#5a606b', fontWeight: \"bolder\"}}>CAST</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                   {castList}\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                    <p style={{color: '#5a606b', fontWeight: \"bolder\"}}>SIMILAR MOVIES</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-3\">\r\n                {similarMovieList}\r\n            </div>\r\n\r\n\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col md-3\">\r\n                <Link to={\"/react-movie\"}>\r\n                         <button type=\"button\" className=\"btn btn-outline-info\">BACK TO HOME</button>\r\n\r\n                                </Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <hr className=\"mt-5\" style={{borderTop:\"1px solid #5a606b\"}}></hr>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport './App.css';\n\nimport {Switch, Route} from 'react-router-dom';\nimport {Home} from './components/home/Home'\nimport { MovieDetail } from './components/moviedetail/MovieDetail';\n\n\nfunction App() {\n  return (\n    <main>\n\n    <Switch>\n\n      <Route path=\"/react-movie\" component={Home} exact />\n      <Route path=\"/movie/:id\" component={MovieDetail} />\n    </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}